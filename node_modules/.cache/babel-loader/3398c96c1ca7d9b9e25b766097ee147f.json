{"ast":null,"code":"var _jsxFileName = \"/home/pi/coding/homepage/src/App.js\";\nimport React from 'react';\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: '00:00:00 AM',\n      className: ''\n    };\n    this.updateTime = this.updateTime.bind(this);\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(this.updateTime, 1000);\n  }\n\n  updateTime() {\n    let date = new Date();\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n\n    if (minutes < 10) {\n      minutes = '0' + minutes;\n    }\n\n    let seconds = date.getSeconds();\n\n    if (seconds < 10) {\n      seconds = '0' + seconds;\n    }\n\n    let period = ' AM';\n\n    if (hours >= 12) {\n      period = ' PM';\n\n      if (hours > 12) {\n        hours -= 12;\n      }\n    }\n\n    if (hours < 10) {\n      hours = '0' + hours;\n    }\n\n    this.setState({\n      time: hours + ':' + minutes + ':' + seconds + period,\n      className: 'rise-animation'\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.className,\n      id: \"clock\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, this.state.time);\n  }\n\n}\n\nclass Weather extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      request: new XMLHttpRequest(),\n      temperature: 'N/A',\n      wind: 'N/A',\n      forecast: 'N/A',\n      imageUrl: '',\n      className: 'weather'\n    };\n    this.getWeatherData = this.getWeatherData.bind(this);\n  }\n\n  componentDidMount() {\n    this.state.request.open('GET', 'https://api.weather.gov/gridpoints/LIX/61,92/forecast');\n    this.state.request.send();\n    this.interval = setInterval(this.getWeatherData, 1000);\n  }\n\n  getWeatherData() {\n    if (this.state.request.status === 0) {\n      return;\n    }\n\n    let weatherData = JSON.parse(this.state.request.responseText);\n    this.setState({\n      temperature: weatherData.properties.periods[0].temperature\n    });\n    this.setState({\n      wind: 'Wind: ' + weatherData.properties.periods[0].windSpeed + ' ' + weatherData.properties.periods[0].windDirection\n    });\n    this.setState({\n      forecast: weatherData.properties.periods[0].shortForecast\n    });\n    this.setState({\n      imageUrl: weatherData.properties.periods[0].icon\n    });\n    this.setState({\n      className: 'weather rise-animation'\n    });\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"temp-and-icon-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, this.state.temperature, \"\\xB0F\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, \"Kenner, LA\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, this.state.forecast, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, this.state.wind));\n  }\n\n}\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Clock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Weather, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/pi/coding/homepage/src/App.js"],"names":["React","Clock","Component","constructor","props","state","time","className","updateTime","bind","componentDidMount","interval","setInterval","date","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","period","setState","render","Weather","request","XMLHttpRequest","temperature","wind","forecast","imageUrl","getWeatherData","open","send","status","weatherData","JSON","parse","responseText","properties","periods","windSpeed","windDirection","shortForecast","icon","clearInterval","App"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass Clock extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            time: '00:00:00 AM',\n            className: ''\n        }\n\n        this.updateTime = this.updateTime.bind(this);\n    }\n\n    componentDidMount(){\n        this.interval = setInterval(this.updateTime, 1000);\n    }\n\n    updateTime(){\n        let date = new Date();\n        let hours = date.getHours();\n        let minutes = date.getMinutes();\n        if(minutes < 10){\n            minutes = '0' + minutes;\n        }\n        let seconds = date.getSeconds();\n        if(seconds < 10){\n            seconds = '0' + seconds;\n        }\n        let period = ' AM';\n\n        if(hours >= 12){\n            period = ' PM'\n\n            if(hours > 12){\n                hours -= 12;\n            }\n        }\n        if(hours < 10){\n            hours = '0' + hours;\n        }\n\n        this.setState({time: hours + ':' + minutes + ':' + seconds + period, className: 'rise-animation'});\n    }\n\n    render(){\n        return(\n            <div className={this.state.className} id='clock'>\n                {this.state.time}\n            </div>\n        );\n    }\n}\n\nclass Weather extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            request: new XMLHttpRequest(),\n            temperature: 'N/A',\n            wind: 'N/A',\n            forecast: 'N/A',\n            imageUrl: '',\n            className: 'weather'\n        }\n\n        this.getWeatherData = this.getWeatherData.bind(this);\n    }\n\n    componentDidMount(){\n        this.state.request.open('GET', 'https://api.weather.gov/gridpoints/LIX/61,92/forecast');\n        this.state.request.send();\n        this.interval = setInterval(this.getWeatherData, 1000);\n    }\n\n    getWeatherData(){\n        if(this.state.request.status === 0){\n            return\n        }\n\n        let weatherData = JSON.parse(this.state.request.responseText);\n        this.setState({temperature: weatherData.properties.periods[0].temperature});\n        this.setState({wind: 'Wind: ' + weatherData.properties.periods[0].windSpeed + ' ' + weatherData.properties.periods[0].windDirection});\n        this.setState({forecast: weatherData.properties.periods[0].shortForecast});\n        this.setState({imageUrl: weatherData.properties.periods[0].icon});\n        this.setState({className: 'weather rise-animation'});\n        clearInterval(this.interval);\n    }\n\n    render(){\n        return(\n            <div className={this.state.className}>\n                <div id='temp-and-icon-div'>\n                    <img src={this.state.imageUrl} />\n                    <p>{this.state.temperature}&deg;F</p>\n                </div>\n                <p>Kenner, LA</p>\n                <p>{this.state.forecast} </p>\n                <p>{this.state.wind}</p>\n            </div>\n        )\n    }\n}\n\nfunction App() {\n    return (\n    <div className=\"App\">\n        <div id='grid'>\n            <Clock />\n            <Weather />\n        </div>\n    </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}