{"ast":null,"code":"import _classCallCheck from\"/home/pi/coding/homepage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/pi/coding/homepage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/pi/coding/homepage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/pi/coding/homepage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/pi/coding/homepage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import'./App.css';var Clock=/*#__PURE__*/function(_React$Component){_inherits(Clock,_React$Component);var _super=_createSuper(Clock);function Clock(props){var _this;_classCallCheck(this,Clock);_this=_super.call(this,props);_this.state={time:'00:00:00 AM',className:''};_this.updateTime=_this.updateTime.bind(_assertThisInitialized(_this));return _this;}_createClass(Clock,[{key:\"componentDidMount\",value:function componentDidMount(){this.interval=setInterval(this.updateTime,1000);}},{key:\"updateTime\",value:function updateTime(){var date=new Date();var hours=date.getHours();var minutes=date.getMinutes();if(minutes<10){minutes='0'+minutes;}var seconds=date.getSeconds();if(seconds<10){seconds='0'+seconds;}var period=' AM';if(hours>=12){period=' PM';if(hours>12){hours-=12;}}if(hours<10){hours='0'+hours;}this.setState({time:hours+':'+minutes+':'+seconds+period,className:'rise-animation'});}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:this.state.className,id:\"clock\"},this.state.time);}}]);return Clock;}(React.Component);var Weather=/*#__PURE__*/function(_React$Component2){_inherits(Weather,_React$Component2);var _super2=_createSuper(Weather);function Weather(props){var _this2;_classCallCheck(this,Weather);_this2=_super2.call(this,props);_this2.state={request:new XMLHttpRequest(),temperature:'N/A',wind:'N/A',forecast:'N/A',imageUrl:'',className:'weather'};_this2.getWeatherData=_this2.getWeatherData.bind(_assertThisInitialized(_this2));return _this2;}_createClass(Weather,[{key:\"componentDidMount\",value:function componentDidMount(){this.state.request.open('GET','https://api.weather.gov/gridpoints/LIX/61,92/forecast');this.state.request.send();this.interval=setInterval(this.getWeatherData,1000);}},{key:\"getWeatherData\",value:function getWeatherData(){if(this.state.request.status===0){return;}var weatherData=JSON.parse(this.state.request.responseText);this.setState({temperature:weatherData.properties.periods[0].temperature});this.setState({wind:'Wind: '+weatherData.properties.periods[0].windSpeed+' '+weatherData.properties.periods[0].windDirection});this.setState({forecast:weatherData.properties.periods[0].shortForecast});this.setState({imageUrl:weatherData.properties.periods[0].icon});this.setState({className:'weather rise-animation'});clearInterval(this.interval);}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:this.state.className},/*#__PURE__*/React.createElement(\"div\",{id:\"temp-and-icon-div\"},/*#__PURE__*/React.createElement(\"img\",{src:this.state.imageUrl,alt:\"weather icon\"}),/*#__PURE__*/React.createElement(\"p\",null,this.state.temperature,\"\\xB0F\")),/*#__PURE__*/React.createElement(\"p\",null,\"Kenner, LA\"),/*#__PURE__*/React.createElement(\"p\",null,this.state.forecast,\" \"),/*#__PURE__*/React.createElement(\"p\",null,this.state.wind));}}]);return Weather;}(React.Component);function App(){return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(\"img\",{id:\"bg-image\",src:require('./dark-rainy-glass.jpg'),alt:\"rainy-glass\"}),/*#__PURE__*/React.createElement(\"div\",{id:\"grid\"},/*#__PURE__*/React.createElement(Clock,null),/*#__PURE__*/React.createElement(Weather,null)));}export default App;","map":{"version":3,"sources":["/home/pi/coding/homepage/src/App.js"],"names":["React","Clock","props","state","time","className","updateTime","bind","interval","setInterval","date","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","period","setState","Component","Weather","request","XMLHttpRequest","temperature","wind","forecast","imageUrl","getWeatherData","open","send","status","weatherData","JSON","parse","responseText","properties","periods","windSpeed","windDirection","shortForecast","icon","clearInterval","App","require"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass Clock extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            time: '00:00:00 AM',\n            className: ''\n        }\n\n        this.updateTime = this.updateTime.bind(this);\n    }\n\n    componentDidMount(){\n        this.interval = setInterval(this.updateTime, 1000);\n    }\n\n    updateTime(){\n        let date = new Date();\n        let hours = date.getHours();\n        let minutes = date.getMinutes();\n        if(minutes < 10){\n            minutes = '0' + minutes;\n        }\n        let seconds = date.getSeconds();\n        if(seconds < 10){\n            seconds = '0' + seconds;\n        }\n        let period = ' AM';\n\n        if(hours >= 12){\n            period = ' PM'\n\n            if(hours > 12){\n                hours -= 12;\n            }\n        }\n        if(hours < 10){\n            hours = '0' + hours;\n        }\n\n        this.setState({time: hours + ':' + minutes + ':' + seconds + period, className: 'rise-animation'});\n    }\n\n    render(){\n        return(\n            <div className={this.state.className} id='clock'>\n                {this.state.time}\n            </div>\n        );\n    }\n}\n\nclass Weather extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            request: new XMLHttpRequest(),\n            temperature: 'N/A',\n            wind: 'N/A',\n            forecast: 'N/A',\n            imageUrl: '',\n            className: 'weather'\n        }\n\n        this.getWeatherData = this.getWeatherData.bind(this);\n    }\n\n    componentDidMount(){\n        this.state.request.open('GET', 'https://api.weather.gov/gridpoints/LIX/61,92/forecast');\n        this.state.request.send();\n        this.interval = setInterval(this.getWeatherData, 1000);\n    }\n\n    getWeatherData(){\n        if(this.state.request.status === 0){\n            return\n        }\n\n        let weatherData = JSON.parse(this.state.request.responseText);\n        this.setState({temperature: weatherData.properties.periods[0].temperature});\n        this.setState({wind: 'Wind: ' + weatherData.properties.periods[0].windSpeed + ' ' + weatherData.properties.periods[0].windDirection});\n        this.setState({forecast: weatherData.properties.periods[0].shortForecast});\n        this.setState({imageUrl: weatherData.properties.periods[0].icon});\n        this.setState({className: 'weather rise-animation'});\n        clearInterval(this.interval);\n    }\n\n    render(){\n        return(\n            <div className={this.state.className}>\n                <div id='temp-and-icon-div'>\n                    <img src={this.state.imageUrl} alt=\"weather icon\" />\n                    <p>{this.state.temperature}&deg;F</p>\n                </div>\n                <p>Kenner, LA</p>\n                <p>{this.state.forecast} </p>\n                <p>{this.state.wind}</p>\n            </div>\n        )\n    }\n}\n\nfunction App() {\n    return (\n    <div className=\"App\">\n        <img id='bg-image' src={require( './dark-rainy-glass.jpg' )} alt='rainy-glass' />\n        <div id='grid'>\n            <Clock />\n            <Weather />\n        </div>\n    </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}